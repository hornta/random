{"code":"export class Random {\r\n    sequence0;\r\n    sequence1;\r\n    sequence2;\r\n    correction;\r\n    constructor(...seeds) {\r\n        this.sequence0 = 0;\r\n        this.sequence1 = 0;\r\n        this.sequence2 = 0;\r\n        this.correction = 1;\r\n        seeds = seeds.filter((seed) => seed !== null && seed !== undefined);\r\n        if (seeds.length == 0) {\r\n            seeds = [Math.random()];\r\n        }\r\n        const mash = makeMash();\r\n        this.sequence0 = mash(\" \");\r\n        this.sequence1 = mash(\" \");\r\n        this.sequence2 = mash(\" \");\r\n        for (const seed of seeds) {\r\n            if (!seed) {\r\n                continue;\r\n            }\r\n            this.sequence0 -= mash(seed);\r\n            if (this.sequence0 < 0) {\r\n                this.sequence0 += 1;\r\n            }\r\n            this.sequence1 -= mash(seed);\r\n            if (this.sequence1 < 0) {\r\n                this.sequence1 += 1;\r\n            }\r\n            this.sequence2 -= mash(seed);\r\n            if (this.sequence2 < 0) {\r\n                this.sequence2 += 1;\r\n            }\r\n        }\r\n    }\r\n    static fromState(state) {\r\n        const random = new Random();\r\n        random.importState(state);\r\n        return random;\r\n    }\r\n    next() {\r\n        const term = 2091639 * this.sequence0 + this.correction * 2.3283064365386963e-10; // 2^-32\r\n        this.sequence0 = this.sequence1;\r\n        this.sequence1 = this.sequence2;\r\n        this.correction = term | 0;\r\n        this.sequence2 = term - this.correction;\r\n        return this.sequence2;\r\n    }\r\n    uint32() {\r\n        return this.next() * 0x100000000; // 2^32\r\n    }\r\n    fract53() {\r\n        return (this.next() + ((this.next() * 0x200000) | 0) * 1.1102230246251565e-16); // 2^-53\r\n    }\r\n    getState() {\r\n        return [\r\n            this.sequence0,\r\n            this.sequence1,\r\n            this.sequence2,\r\n            this.correction,\r\n        ];\r\n    }\r\n    importState(state) {\r\n        this.sequence0 = +state[0] || 0;\r\n        this.sequence1 = +state[1] || 0;\r\n        this.sequence2 = +state[2] || 0;\r\n        this.correction = +state[3] || 0;\r\n    }\r\n}\r\nconst makeMash = () => {\r\n    let n = 0xefc8249d;\r\n    return (data) => {\r\n        data = data.toString();\r\n        for (let i = 0; i < data.length; i++) {\r\n            n += data.charCodeAt(i);\r\n            var h = 0.02519603282416938 * n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            h *= n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            n += h * 0x100000000; // 2^32\r\n        }\r\n        return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\r\n    };\r\n};\r\n//# sourceMappingURL=random.js.map","references":[],"map":"{\"version\":3,\"file\":\"random.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/random.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"C:/Users/hornta/Desktop/github/random/dist/random.d.ts","writeByteOrderMark":false,"text":"export declare type RandomState = [number, number, number, number];\r\nexport declare class Random {\r\n    private sequence0;\r\n    private sequence1;\r\n    private sequence2;\r\n    private correction;\r\n    constructor(...seeds: any[]);\r\n    static fromState(state: RandomState): Random;\r\n    next(): number;\r\n    uint32(): number;\r\n    fract53(): number;\r\n    getState(): RandomState;\r\n    private importState;\r\n}\r\n"}}
